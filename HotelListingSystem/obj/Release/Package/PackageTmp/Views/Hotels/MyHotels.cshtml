@model IEnumerable<HotelListingSystem.Models.Hotel>

@{
    ViewBag.Title = "Index";
    Layout = null;
}


<head>
    @Html.Partial("_eHead")
    <style>
        .container_body {
            margin: 200px 20px 0 40px;
        }
    </style>
</head>
<body>
    <div class="container_body main">
        <div class="PageBody">
            <h2>My Listed Hotels </h2>

            <p>
                @Html.ActionLink("Create New", "Create", new { id = 0 }, new { @class = "btn btn-success" })  @Html.ActionLink("Payments", "payments","payments", new { id = 0 }, new { @class = "btn btn-success" })
            </p>
            <div class="table">
                <table id="example" class="table table-striped table-bordered" style="width:100%">
                    <thead>
                        <tr>
                            <th>Hotel Display</th>
                            <th>Name</th>
                            <th>Occupancy</th>
                            <th>Physical Address</th>
                            <th>City</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <img src="@Url.Action("DownloadHotelFile", "Hotels", new { Id = item.Id, doc_key_type = "c_hotel_image_c" })" alt="Hotel Image" style="height: 150px;width: 150px;" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MaxOccupancy)
                                </td>
                                <td>
                                    @string.Format($"{item.StreetNumber} {item.StreetName}, {item.Suburb}, {item.PhysicalAddressCode}")
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.City)
                                </td>
                                <td>
                                    @if (User.IsInRole("Business Owner") && !item.Tour360 && !String.IsNullOrEmpty(item.Tour360Id))
                                    {
                                        <button class="btn btn-sm btn-warning" onclick="Tour360Activate('@item.Id')">Activate 360 Tour</button>
                                    }
                                    @if (User.IsInRole("Business Owner") && item.Tour360)
                                    {
                                        <button class="btn btn-sm btn-warning" onclick="Tour360Deactivate('@item.Id')">Deactivate 360 Tour</button>
                                    }
                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-warning" }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info" }) |
                                    @Html.ActionLink("Layout", "HotelLayout", new { id = item.Id }, new { @class = "btn btn-info" })
                                </td>
                            </tr>
                        }

                    </tbody>
                    <tfoot>
                        <tr>
                            <th>Hotel Display</th>
                            <th>Name</th>
                            <th>Occupancy</th>
                            <th>Physical Address</th>
                            <th>City</th>
                            <th></th>
                        </tr>
                    </tfoot>
                </table>

            </div>

        </div>

    </div>
</body>













<div hidden>
    <h2>My Listed Hotels</h2>

    @if (!User.IsInRole("Receptionist"))
    {
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
    }
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MaxOccupancy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StreetNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StreetName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Suburb)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhysicalAddressCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HotelImageName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CertificateOfOccupancyDocName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.COADocName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsVerified)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxOccupancy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StreetNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StreetName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Suburb)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhysicalAddressCode)
                </td>
                <td>
                    <img src="@Url.Action("DisplayImage", "Hotels", new { hotelId = item.Id })" alt="Hotel Image" style="height: 150px;width: 150px;" />
                </td>
                <td>
                    <img src="@Url.Action("DisplayImage", "Hotels", new { hotelId = item.Id, imageType = 2 })" alt="Hotel Image" style="height: 150px;width: 150px;" />
                </td>
                <td>
                    <img src="@Url.Action("DisplayImage", "Hotels", new { hotelId = item.Id, imageType = 3 })" alt="Hotel Image" style="height: 150px;width: 150px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HotelImageFileSize)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsVerified)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id })

                </td>
            </tr>
        }

    </table>
</div>
@Html.Partial("_eFooter")
<script>
    $(document).ready(function () {
        $('#example').DataTable();
    });

    function Tour360Activate(id) {
        $.ajax({
            url: '@Url.Action("ActivateTour360", "Hotels")',
            type: 'GET',
            data: { Id: id },
            success: function (data) {
                alert("Tour 360 has been activated, now available on hotel preview..");
                location.reload();
            },
            error: function (xhr, textStatus, errorThrown) {
                console.error(errorThrown);
            }
        })
    }

    function Tour360Deactivate(id) {
        $.ajax({
            url: '@Url.Action("ActivateTour360", "Hotels")',
            type: 'GET',
            data: { Id: id },
            success: function (data) {
                alert("Tour 360 has been deactivated, its not available on hotel preview..");
                location.reload();
            },
            error: function (xhr, textStatus, errorThrown) {
                console.error(errorThrown);
            }
        })
    }
</script>