@model HotelListingSystem.Models.HotelEvent

@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/css/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap4.min.css">
    <meta name="viewport" content="width=device-width" />
    <title>Update Reservation</title>
    @Html.Partial("_eHead")
    <style>
        .c_half_input {
            width: 177px;
        }

        .image-text {
            margin: 0 0 0 20px;
            height: 37.6px;
        }
    </style>
</head>
<body>
    <main>
        @using (Html.BeginForm("Update", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <input type="text" hidden id="hiddenChecklists" name="hiddenChecklists" />
            <div class="form-horizontal">
                <h1 class="col-md-offset-2">Update Event Details</h1>
                @Html.HiddenFor(model => model.HotelId, new { @Name = "hotelId" })
                @Html.HiddenFor(model => model.CreateByUserId, new { @Name = "CreateByUserId" })
                @Html.HiddenFor(model => model.Id, new { @Name = "Id" })
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <br />
                <br />
                <h5 class="col-md-offset-2">Event Detals</h5>
                <hr class="col-md-offset-2" />
                <br />

                <div class="form-group">
                    @Html.Label("Current Display Image", new { @class = "control-label col-md-2" })
                    <div class="col-md-7">
                        <img src="@Url.Action("DownloadRoomImageFile", new { Id = Model.Id, doc_key_type="e_event_display_image" })" width="300px" height="150px" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("New Display Image", new { @class = "control-label col-md-2" })
                    <div class="col-md-7">
                        @*<a href='@Url.Action("DownloadFile", new { FileId = ViewBag.CustomerFileId })'><i class="fa fa-download"></i>@ViewBag.CustomerDocName</a>*@
                        <input type="file" name="file" id="imageUpload" class="control-label" accept=".png, .jpg, .jpeg"/>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, "Event Description", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger", @disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SpecialFeatures, "Special Features", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.TextAreaFor(model => model.SpecialFeatures, new { @class = "form-control", @required = "required", @placeholder = "Features to be separated with a coma ( , )" })
                        @Html.ValidationMessageFor(model => model.SpecialFeatures, "", new { @class = "text-danger", @disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, "Start Date", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "date", @Id = "StartId" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger", @disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Duration, "Duration (In minutes)", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger", @disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Price, "No Of Tickets", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.NoOfTickets, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.NoOfTickets, "", new { @class = "text-danger", @disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Price, "Price Per Ticket", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger", @disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Duration, "Takes Place Daily", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.CheckBoxFor(model => model.DailyOccurance, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.DailyOccurance, "", new { @class = "text-danger", @disabled = "disabled" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Update Event" class="btn btn-outline-warning" />
                        <input type="button" onclick="window.location.href='/event/index'" value="Back To List" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }



    </main>
</body>
</html>
@Html.Partial("_eFooter")

<script>
    $(document).ready(function () {
        document.getElementById("StartId").value = formatdate(new Date('@Model.StartDate'));
    });
    function formatdate(date) {
        var year = date.getFullYear();
        var month = (date.getMonth() + 1).toString().padStart(2, "0");
        var day = date.getDate().toString().padStart(2, "0");
        var formattedDate = year + "-" + month + "-" + day;
        return formattedDate;
    }
</script>
