@model IEnumerable<HotelListingSystem.Models.Business>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Age)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NameOfBank)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AccountNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BranchCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhysicalAddress1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhysicalAddress2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhysicalAddress3)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhysicalAddress4)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhysicalAddress5)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhysicalAddressCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BusinessEmail)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CertificateOfOccupancyDocName)
        </th>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.COADocName)
        </th>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.COADocVerified)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Age)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NameOfBank)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AccountNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BranchCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhysicalAddress1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhysicalAddress2)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhysicalAddress3)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhysicalAddress4)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhysicalAddress5)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhysicalAddressCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BusinessEmail)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CertificateOfOccupancyDocName)
        </td>
        <td>
            @Html.Raw(item.CertificateOfOccupancyDocContent != null ? string.Format("<a href='{0}'>{1}</a>", @Url.Action("GetDocument", "Document", new { id = item.Id, doctype = 1}), "<span class='pe-7s-cloud-download'  id='downloadFile' style='font-size:23px;'></span>") : "No Document<br/>")
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.COADocName)
        </td>
        <td>
            @Html.Raw(item.COADocContent != null ? string.Format("<a href='{0}'>{1}</a>", @Url.Action("GetDocument", "Document", new { id = item.Id, doctype = 2 }), "<span class='pe-7s-cloud-download'  id='downloadFile' style='font-size:23px;'></span>") : "No Document<br/>")
        </td>
        <td>
            @Html.ActionLink("Details", "Details", new { id = item.Id })
            @if (User.IsInRole("Receptionist") && (item.COADocVerified == false || item.CertificateOfOccupancyDocVerified == false))
            {
                <button id="verifyBusiness">Verify business</button>
            }
        </td>
    </tr>
}

</table>
<script>
    $('#verifyBusiness').on('click', function () {
        $.ajax({
            type: "POST",
            url: "@Url.Action("VerifyBusiness", "Businesses")",
            data: data,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.status == 'True') {
                    alert("Business has been verified.");
                    setTimeout(function () {
                        location.reload();
                    }, 2000);
                    //alert("The status cannot be updated at this time");
                }

                else {
                    alert("Could not verify buiness, please try again later.");
                }
            }
        });
    });

    @*$(document).ready(function () {
        function getCoaDocument(docId) {
            var formdata = new FormData();
            var xhr = new XMLHttpRequest();

            xhr.open('POST', '@Url.Action("GetDocument", "Document")?id=' + docId + 'doctype=' 1;
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    //HoldOn.close();
                }
            }

            return false;
        }

        function getOccupancyDocument(docId) {
            var formdata = new FormData();
            var xhr = new XMLHttpRequest();

            xhr.open('POST', '@Url.Action("GetDocument", "Document")?id=' + docId + 'doctype=' 2);
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    //HoldOn.close();
                }
            }

            return false;
        }*@
    });
</script>
