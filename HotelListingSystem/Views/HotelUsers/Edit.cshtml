@model HotelListingSystem.Models.HotelUsers

@{
    ViewBag.Title = "Edit";
    Layout = null;
}


<head>
    @Html.Partial("_eHead")
    <style>
        hr {
            width:30%;
        }
        .container_body {
            margin-left:50px;
        }
    </style>
</head>


<body>
    <main>
        <div class="container_body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Edit User Information</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.IdentificationNumber)
                @Html.HiddenFor(model => model.CreatedOn)
                @Html.HiddenFor(model => model.StatusId)
                @Html.HiddenFor(model => model.Designation)
                @Html.HiddenFor(model => model.CompanyName)
                @Html.HiddenFor(model => model.HotelUserType)
                @Html.HiddenFor(model => model.IsPasswordReset)

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HotelUserType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.HotelUserType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HotelUserType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (User.IsInRole("Employee") && Model.FaceVerified != false)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = "required", @Id= "PasswordId" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @Id = "ConfirmPasswordId", @onfocusout = "ConfirmPassword(this.value)" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-3">
                        <input type="submit" value="Save" class="btn btn-outline-primary" />
                    </div>
                </div>
            </div>
            }
        </div>
    </main>
</body>



<div class="back_btn">
    @Html.ActionLink("Back to List", "Index", new {id = 0}, new {@class = "btn btn-success" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@Html.Partial("_eFooter")

<script>
    function ConfirmPassword(passconfirm) {
        debugger;
        let password = document.getElementById('PasswordId').value;
        if (password !== passconfirm) {
            $('#PasswordId').val('');
            alert('Confirm Password does not match Password');
        }
    }
</script>